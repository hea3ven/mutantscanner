buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.0.3.RELEASE')
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

version '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    compile project(':mutantscanner-lib')
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    runtime 'org.postgresql:postgresql:9.4-1206-jdbc42'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'io.rest-assured:rest-assured:3.1.0'
    testCompile "org.mockito:mockito-core:1.+"
}

sourceSets {
    integrationTest {
        compileClasspath += main.output + test.output + configurations.testRuntime
        runtimeClasspath += main.output + test.output + compileClasspath
        java.srcDir file('src/integration-test/java')
        resources.srcDir file('src/integration-test/resources')
    }
}

task integrationTest(type: Test) {
    group = LifecycleBasePlugin.VERIFICATION_GROUP
    description = 'Runs the integration tests.'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    binResultsDir = file("$buildDir/integration-test-results/binary/integTest")

	systemProperty("baseUrl", System.getProperty("baseUrl"))

    mustRunAfter tasks.build
}
